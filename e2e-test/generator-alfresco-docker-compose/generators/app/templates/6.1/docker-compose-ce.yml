# This docker-compose file will spin up an ACS cluster on a local host or on a server and it requires a minimum of 12GB Memory to distribute among containers.
# Limit container memory and assign X percentage to JVM.  There are couple of ways to allocate JVM Memory for ACS Containers
# For example: 'JAVA_OPTS: "$JAVA_OPTS -XX:+PrintFlagsFinal -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"'
# But, as per Oracle docs (https://docs.oracle.com/javase/9/gctuning/parallel-collector1.htm#JSGCT-GUID-CAB83393-3438-44ED-98F0-D15641B43C7D)
# If container memory is not explicitly set, then the above flags will default max heap to 1/4th of container's memory which may not be ideal.
# Hence, setting up explicit Container memory and then assigning a percentage of it to the JVM for performance tuning.

# Using version 2 as 3 does not support resource constraint options (cpu_*, mem_* limits) for non swarm mode in Compose
version: "2"

services:

    alfresco: <% if (httpMode == 'http') { %> 
        image: alfresco/alfresco-content-repository-community:${ALFRESCO_CE_TAG} <% } else { %>
        build:
          context: ./alfresco-https
          args:
            ALFRESCO_TAG: ${ALFRESCO_CE_TAG}
            TRUSTSTORE_TYPE: JCEKS
            TRUSTSTORE_PASS: kT9X6oe68t
            KEYSTORE_TYPE: JCEKS
            KEYSTORE_PASS: kT9X6oe68t <% } %>
        mem_limit: 1500m
        environment:
            JAVA_OPTS : "
                -Ddb.driver=org.postgresql.Driver
                -Ddb.username=alfresco
                -Ddb.password=alfresco
                -Ddb.url=jdbc:postgresql://postgres:5432/alfresco
                -Dsolr.host=solr6
                -Dsolr.port.ssl=8983 
                -Dsolr.secureComms=<%=secureComms%>
                -Dsolr.base.url=/solr
                -Dindex.subsystem.name=solr6
                -Dshare.host=localhost
                -Dalfresco.port=8082
                -Daos.baseUrlOverwrite=http://localhost:8082/alfresco/aos
                -Dmessaging.broker.url=\"failover:(nio://activemq:61616)?timeout=3000&jms.useCompression=true\"
                -Ddeployment.method=DOCKER_COMPOSE
                -Dcsrf.filter.enabled=false
                -Dalfresco.restApi.basicAuthScheme=true
                -Xms1g -Xmx1g
                "
        ports:
            - 8082:8080 <% if (httpMode == 'https') { %>    
            - 8443:8443
        volumes:
            - ./keystores/alfresco:/usr/local/tomcat/alf_data/keystore <% } %>

    solr6: <% if (httpMode == 'http') { %>
        image: alfresco/alfresco-search-services:${SEARCH_CE_TAG} <% } else { %>
        build:
          context: ./search-https
          args:
            SEARCH_TAG: ${SEARCH_CE_TAG}
            TRUSTSTORE_TYPE: JCEKS
            KEYSTORE_TYPE: JCEKS
        mem_limit: 2500m <% } %>
        environment:
            #Solr needs to know how to register itself with Alfresco
            SOLR_ALFRESCO_HOST: "alfresco"
            SOLR_ALFRESCO_PORT: "<%=alfrescoPort%>"
            #Alfresco needs to know how to call solr
            SOLR_SOLR_HOST: "solr6"
            SOLR_SOLR_PORT: "8983"
            #Create the default alfresco and archive cores
            SOLR_CREATE_ALFRESCO_DEFAULTS: "alfresco,archive"
            SOLR_JAVA_MEM: "-Xms2g -Xmx2g" <% if (httpMode == 'https') { %>
            SOLR_SSL_TRUST_STORE: "/opt/alfresco-search-services/keystore/ssl.repo.client.truststore"
            SOLR_SSL_TRUST_STORE_PASSWORD: "kT9X6oe68t"
            SOLR_SSL_TRUST_STORE_TYPE: "JCEKS"
            SOLR_SSL_KEY_STORE: "/opt/alfresco-search-services/keystore/ssl.repo.client.keystore"
            SOLR_SSL_KEY_STORE_PASSWORD: "kT9X6oe68t"
            SOLR_SSL_KEY_STORE_TYPE: "JCEKS"
            SOLR_SSL_NEED_CLIENT_AUTH: "true"
            SOLR_OPTS: "
                -Dsolr.ssl.checkPeerName=false
                -Dsolr.allow.unsafe.resourceloading=true
            " <% } %>
        ports:
            - 8083:8983 <% if (httpMode == 'https') { %>
        volumes:
            - ./keystores/solr:/opt/alfresco-search-services/keystore <% } %>

    share:
        image: alfresco/alfresco-share:${SHARE_TAG}
        mem_limit: 1g
        environment:
            - REPO_HOST=alfresco
            - REPO_PORT=8080
            - "CATALINA_OPTS= -Xms500m -Xmx500m"
        ports:
            - 8080:8080

    postgres:
        image: postgres:${POSTGRES_TAG}
        mem_limit: 1500m
        environment:
            - POSTGRES_PASSWORD=alfresco
            - POSTGRES_USER=alfresco
            - POSTGRES_DB=alfresco
        command: postgres -c max_connections=300 -c log_min_messages=LOG
        ports:
            - 5432:5432

    activemq:
        image: alfresco/alfresco-activemq:${ACTIVE_MQ_TAG}
        mem_limit: 2048m
        ports:
            - 8161:8161 # Web Console
            - 5672:5672 # AMQP
            - 61616:61616 # OpenWire
            - 61613:61613 # STOMP
